name: ssh

on:
  push:
    branches:
      - main

jobs:
  ssh-agent:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: run ssh-agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # 원격 서버를 신뢰할 수 있는 서버로 등록하는 과정
      - name: Add Host Server Fingerprint to Known Hosts
        run: ssh-keyscan -H -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts || true

        # 환경 변수 파일 생성
      - name: Create .env file
        run: |
          echo "DATABASE_HOST=${{ secrets.DATABASE_HOST }}" >> .env
          echo "DATABASE_NAME=${{ secrets.DATABASE_NAME }}" >> .env
          echo "DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}" >> .env
          echo "DATABASE_PORT=${{ secrets.DATABASE_PORT }}" >> .env
          echo "DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }}" >> .env
          echo "MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}" >> .env
          echo "MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}" >> .env
          echo "VITE_API_URL=${{ secrets.VITE_API_URL }}" >> .env

      - name: Docker Image Build
        run: docker compose build

      - name: Login DockerHub
        run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u '${{ secrets.DOCKER_USERNAME}}' --password-stdin

      - name: Docker Image PUsh
        run: docker compose push
      # - name: create file on remote server
      #   run: ssh -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} "touch hello-world.txt"

      # - name: copy file to remote server
      #   run: scp -P ${{secrets.SSH_PORT}} README.md ${{secrets.SSH_USERNAME}}@${{secrets.SSH_HOST}}:~/

      # - name: Run remote command test
      #   uses: appleboy/ssh-action@v1.2.0
      #   with:
      #     host: ${{ secrets.SSH_HOST }}
      #     username: ${{ secrets.SSH_USERNAME }}
      #     key: ${{ secrets.SSH_PRIVATE_KEY }}
      #     port: ${{ secrets.SSH_PORT }}
      #     script: |
      #       docker-compose -f docker-compose.yml pull
      #       docker-compose -f docker-compose.yml up -d
